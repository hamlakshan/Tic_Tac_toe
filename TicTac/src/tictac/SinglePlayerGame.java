/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tictac;

import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class SinglePlayerGame extends javax.swing.JFrame {

    /**
     * Creates new form SinglePlayerGame
     */
    
    
    public boolean []occupied= new boolean[9];
    public JButton []gameButton=new JButton[9];
    public int[] mymove=new int[5];
    public int[] playermove= new int[5];
    int count=0;
    ImageIcon cross;
    ImageIcon ovel;
    ImageIcon box;
    Players player;
    String player1Name;
    String player2Name;
    ImageIcon icon1;
    
    public SinglePlayerGame(String player1Name, String Player2Name){
        initComponents();
        innitialize();
        for(int i=0;i<9;i++){
            occupied[i]=false;
        }
        setLocation(500, 200);
        cross=new ImageIcon("Cross.png");
        ovel=new ImageIcon("oo.png");
        box=new ImageIcon("tinker.gif");
        player=new Players();
       this.player1Name=player1Name;
       this.player2Name=Player2Name;
    }
     
    
    public SinglePlayerGame() {
         
     }
    
     
    public void innitialize(){
        gameButton[0]=gameButton1;
        gameButton[1]=gameButton2;
        gameButton[2]=gameButton3;
        gameButton[3]=gameButton4;
        gameButton[4]=gameButton5;
        gameButton[5]=gameButton6;
        gameButton[6]=gameButton7;
        gameButton[7]=gameButton8;
        gameButton[8]=gameButton9;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        gameButton1 = new javax.swing.JButton();
        gameButton2 = new javax.swing.JButton();
        gameButton3 = new javax.swing.JButton();
        gameButton4 = new javax.swing.JButton();
        gameButton5 = new javax.swing.JButton();
        gameButton6 = new javax.swing.JButton();
        gameButton7 = new javax.swing.JButton();
        gameButton8 = new javax.swing.JButton();
        gameButton9 = new javax.swing.JButton();
        beginButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(153, 51, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Papyrus", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tic Tac Toe");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 50, 260, 41);

        gameButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton1);
        gameButton1.setBounds(40, 110, 70, 70);

        gameButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton2);
        gameButton2.setBounds(120, 110, 70, 70);

        gameButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton3);
        gameButton3.setBounds(200, 110, 70, 70);

        gameButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton4);
        gameButton4.setBounds(40, 190, 70, 70);

        gameButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton5);
        gameButton5.setBounds(120, 190, 70, 70);

        gameButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton6);
        gameButton6.setBounds(200, 190, 70, 70);

        gameButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton7);
        gameButton7.setBounds(40, 270, 70, 70);

        gameButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton8);
        gameButton8.setBounds(120, 270, 70, 70);

        gameButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton9);
        gameButton9.setBounds(200, 270, 70, 70);

        beginButton.setBackground(new java.awt.Color(0, 0, 0));
        beginButton.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        beginButton.setForeground(new java.awt.Color(65, 177, 230));
        beginButton.setText("begin");
        beginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginButtonActionPerformed(evt);
            }
        });
        jPanel1.add(beginButton);
        beginButton.setBounds(60, 350, 100, 40);

        exitButton.setBackground(new java.awt.Color(0, 0, 0));
        exitButton.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        exitButton.setForeground(new java.awt.Color(65, 177, 230));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton);
        exitButton.setBounds(170, 350, 90, 40);

        jLabel2.setForeground(new java.awt.Color(255, 255, 102));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tictac/tumblr_static_elsa.png"))); // NOI18N
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 320, 400);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 300, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void gameButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton1ActionPerformed
        // TODO add your handling code here:
        gameButton1.setIcon(ovel);
        count++;
        occupied[0]=true;
        System.out.println("button 1 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton1ActionPerformed

    private void beginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginButtonActionPerformed
        // TODO add your handling code here:
          com_move();
    }//GEN-LAST:event_beginButtonActionPerformed

    private void gameButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton2ActionPerformed
        // TODO add your handling code here:
         gameButton2.setIcon(ovel);
        count++;
        occupied[1]=true;
        System.out.println("button 2 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton2ActionPerformed

    private void gameButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton3ActionPerformed
        // TODO add your handling code here:
        gameButton3.setIcon(ovel);
        count++;
        occupied[2]=true;
        System.out.println("button 3 pressed");
        com_move();
        select();
        
    }//GEN-LAST:event_gameButton3ActionPerformed

    private void gameButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton4ActionPerformed
        // TODO add your handling code here:
        gameButton4.setIcon(ovel);
        count++;
        occupied[3]=true;
        System.out.println("button 4 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton4ActionPerformed

    private void gameButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton5ActionPerformed
        // TODO add your handling code here:
        gameButton5.setIcon(ovel);
        count++;
        occupied[4]=true;
        System.out.println("button 5 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton5ActionPerformed

    private void gameButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton6ActionPerformed
gameButton6.setIcon(ovel);
        count++;
        occupied[5]=true;
        System.out.println("button 6 pressed");
        com_move();
        select();
        // TODO add your handling code here:
    }//GEN-LAST:event_gameButton6ActionPerformed

    private void gameButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton7ActionPerformed
        // TODO add your handling code here:
        gameButton7.setIcon(ovel);
        count++;
        occupied[6]=true;
        System.out.println("button 7 pressed");
        com_move();
        select();
        
    }//GEN-LAST:event_gameButton7ActionPerformed

    private void gameButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton8ActionPerformed
        // TODO add your handling code here:
        gameButton8.setIcon(ovel);
        count++;
        occupied[7]=true;
        System.out.println("button 8 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton8ActionPerformed

    private void gameButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton9ActionPerformed
        // TODO add your handling code here:
        gameButton9.setIcon(ovel);
        count++;
        occupied[8]=true;
        System.out.println("button 9 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinglePlayerGame().setVisible(true);
            }
        });
    }
    
      public void com_move(){
        if(count==0){
            first_move();
        }
        if(count==2){
            second_move();
        }
        if(count==4){
            third_move();
        }
        if(count==6){
            fourth_move();
        }
        if(count==8){
            fifth_move();
        }
        count++;
        
    }
    public void user_move(){
        
        
    }
    
    public void play_first(){
        
    }
    
    public void first_move(){
        mymove[0]=new Random().nextInt(9);
        System.out.println("first move  "+ mymove[0]);
        gameButton[mymove[0]].setIcon(cross);
        occupied[mymove[0]]=true;
    }
    
    public void second_move(){
        System.out.println("second move .....");
        int i,k=mymove[0];
        if(k==0){
            int []arr={1,2,3,4,6,8};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==1){
            int []arr={0,2,4,7};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==2){
            int []arr={0,1,4,5,8,6};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==3){
            int []arr={0,4,5,6};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==4){
            int []arr={0,1,2,3,5,6,7,8};
            while(true){
                i=new Random().nextInt(8);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==5){
            int []arr={3,4,2,8};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==6){
            int []arr={0,2,3,4,7,8};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==7){
            int []arr={1,4,6,8};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }
        if(k==8){
            int []arr={6,7,5,2,0,4};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[i].setIcon(cross);
                    occupied[i]=true;
                    break;
                }
            }
        }   
    }
    
    public void third_move(){
        int [][]arr={{0,1},{0,2},{0,3},{0,4},{0,6},{0,8},{1,2},{1,4},{1,7},{2,4},{2,5},{2,8},{2,6},{3,4},{3,5},{3,6},{4,5},{4,6},{4,7},{4,8},{5,3},{5,4},{5,2},{5,8},{6,7},{6,8},{7,8}};
        boolean moved=false;
        
        
        // blocking.......
        
        System.out.println("third move.......");
        
        while(true){
            if((playermove[0]==arr[0][0]&&playermove[1]==arr[0][1])||(playermove[1]==arr[0][0]&&playermove[0]==arr[0][1])){
                if(occupied[2]==false){
                    mymove[2]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[1][0]&&playermove[1]==arr[1][1])||(playermove[1]==arr[1][0]&&playermove[0]==arr[1][1])){
                if(occupied[1]==false){
                    mymove[2]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[2][0]&&playermove[1]==arr[2][1])||(playermove[1]==arr[2][0]&&playermove[0]==arr[2][1])){
                if(occupied[6]==false){
                    mymove[2]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[3][0]&&playermove[1]==arr[3][1])||(playermove[1]==arr[3][0]&&playermove[0]==arr[3][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[4][0]&&playermove[1]==arr[4][1])||(playermove[1]==arr[4][0]&&playermove[0]==arr[4][1])){
                if(occupied[3]==false){
                    mymove[2]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[5][0]&&playermove[1]==arr[5][1])||(playermove[1]==arr[5][0]&&playermove[0]==arr[5][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[6][0]&&playermove[1]==arr[6][1])||(playermove[1]==arr[6][0]&&playermove[0]==arr[6][1])){
                if(occupied[0]==false){
                    mymove[2]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[7][0]&&playermove[1]==arr[7][1])||(playermove[1]==arr[7][0]&&playermove[0]==arr[7][1])){
                if(occupied[7]==false){
                    mymove[2]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[8][0]&&playermove[1]==arr[8][1])||(playermove[1]==arr[8][0]&&playermove[0]==arr[8][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[9][0]&&playermove[1]==arr[9][1])||(playermove[1]==arr[9][0]&&playermove[0]==arr[9][1])){
                if(occupied[6]==false){
                    mymove[2]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[10][0]&&playermove[1]==arr[10][1])||(playermove[1]==arr[10][0]&&playermove[0]==arr[10][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[11][0]&&playermove[1]==arr[11][1])||(playermove[1]==arr[11][0]&&playermove[0]==arr[11][1])){
                if(occupied[5]==false){
                    mymove[2]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[12][0]&&playermove[1]==arr[12][1])||(playermove[1]==arr[12][0]&&playermove[0]==arr[12][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[13][0]&&playermove[1]==arr[13][1])||(playermove[1]==arr[13][0]&&playermove[0]==arr[13][1])){
                if(occupied[5]==false){
                    mymove[2]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[14][0]&&playermove[1]==arr[14][1])||(playermove[1]==arr[14][0]&&playermove[0]==arr[14][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[15][0]&&playermove[1]==arr[15][1])||(playermove[1]==arr[15][0]&&playermove[0]==arr[15][1])){
                if(occupied[0]==false){
                    mymove[2]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[16][0]&&playermove[1]==arr[16][1])||(playermove[1]==arr[16][0]&&playermove[0]==arr[16][1])){
                if(occupied[3]==false){
                    mymove[2]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[17][0]&&playermove[1]==arr[17][1])||(playermove[1]==arr[17][0]&&playermove[0]==arr[17][1])){
                if(occupied[2]==false){
                    mymove[2]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[18][0]&&playermove[1]==arr[18][1])||(playermove[1]==arr[18][0]&&playermove[0]==arr[18][1])){
                if(occupied[1]==false){
                    mymove[2]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[19][0]&&playermove[1]==arr[19][1])||(playermove[1]==arr[19][0]&&playermove[0]==arr[19][1])){
                if(occupied[0]==false){
                    mymove[2]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[20][0]&&playermove[1]==arr[20][1])||(playermove[1]==arr[20][0]&&playermove[0]==arr[20][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[21][0]&&playermove[1]==arr[21][1])||(playermove[1]==arr[21][0]&&playermove[0]==arr[21][1])){
                if(occupied[3]==false){
                    mymove[2]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[22][0]&&playermove[1]==arr[22][1])||(playermove[1]==arr[22][0]&&playermove[0]==arr[22][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[23][0]&&playermove[1]==arr[23][1])||(playermove[1]==arr[23][0]&&playermove[0]==arr[23][1])){
                if(occupied[2]==false){
                    mymove[2]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[24][0]&&playermove[1]==arr[24][1])||(playermove[1]==arr[24][0]&&playermove[0]==arr[24][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[25][0]&&playermove[1]==arr[25][1])||(playermove[1]==arr[25][0]&&playermove[0]==arr[25][1])){
                if(occupied[7]==false){
                    mymove[2]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[26][0]&&playermove[1]==arr[26][1])||(playermove[1]==arr[26][0]&&playermove[0]==arr[26][1])){
                if(occupied[6]==false){
                    mymove[2]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            
            break;
            
        }  //end of the while loop which is used to assign the next move which move to block the winning of the player        
        
        if(moved==false){
            while(true){
            if((mymove[0]==arr[0][0]&&mymove[1]==arr[0][1])||(mymove[1]==arr[0][0]&&mymove[0]==arr[0][1])){
                if(occupied[2]==false){
                    mymove[2]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[1][0]&&mymove[1]==arr[1][1])||(mymove[1]==arr[1][0]&&mymove[0]==arr[1][1])){
                if(occupied[1]==false){
                    mymove[2]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[2][0]&&mymove[1]==arr[2][1])||(mymove[1]==arr[2][0]&&mymove[0]==arr[2][1])){
                if(occupied[6]==false){
                    mymove[2]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[3][0]&&mymove[1]==arr[3][1])||(mymove[1]==arr[3][0]&&mymove[0]==arr[3][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[4][0]&&mymove[1]==arr[4][1])||(mymove[1]==arr[4][0]&&mymove[0]==arr[4][1])){
                if(occupied[3]==false){
                    mymove[2]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[5][0]&&mymove[1]==arr[5][1])||(mymove[1]==arr[5][0]&&mymove[0]==arr[5][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[6][0]&&mymove[1]==arr[6][1])||(mymove[1]==arr[6][0]&&mymove[0]==arr[6][1])){
                if(occupied[0]==false){
                    mymove[2]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[7][0]&&mymove[1]==arr[7][1])||(mymove[1]==arr[7][0]&&mymove[0]==arr[7][1])){
                if(occupied[7]==false){
                    mymove[2]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[8][0]&&mymove[1]==arr[8][1])||(mymove[1]==arr[8][0]&&mymove[0]==arr[8][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[9][0]&&mymove[1]==arr[9][1])||(mymove[1]==arr[9][0]&&mymove[0]==arr[9][1])){
                if(occupied[6]==false){
                    mymove[2]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[10][0]&&mymove[1]==arr[10][1])||(mymove[1]==arr[10][0]&&mymove[0]==arr[10][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[11][0]&&mymove[1]==arr[11][1])||(mymove[1]==arr[11][0]&&mymove[0]==arr[11][1])){
                if(occupied[5]==false){
                    mymove[2]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[12][0]&&mymove[1]==arr[12][1])||(mymove[1]==arr[12][0]&&mymove[0]==arr[12][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[13][0]&&mymove[1]==arr[13][1])||(mymove[1]==arr[13][0]&&mymove[0]==arr[13][1])){
                if(occupied[5]==false){
                    mymove[2]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[14][0]&&mymove[1]==arr[14][1])||(mymove[1]==arr[14][0]&&mymove[0]==arr[14][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[15][0]&&mymove[1]==arr[15][1])||(mymove[1]==arr[15][0]&&mymove[0]==arr[15][1])){
                if(occupied[0]==false){
                    mymove[2]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[16][0]&&mymove[1]==arr[16][1])||(mymove[1]==arr[16][0]&&mymove[0]==arr[16][1])){
                if(occupied[3]==false){
                    mymove[2]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[17][0]&&mymove[1]==arr[17][1])||(mymove[1]==arr[17][0]&&mymove[0]==arr[17][1])){
                if(occupied[2]==false){
                    mymove[2]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[18][0]&&mymove[1]==arr[18][1])||(mymove[1]==arr[18][0]&&mymove[0]==arr[18][1])){
                if(occupied[1]==false){
                    mymove[2]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[19][0]&&mymove[1]==arr[19][1])||(mymove[1]==arr[19][0]&&mymove[0]==arr[19][1])){
                if(occupied[0]==false){
                    mymove[2]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[20][0]&&mymove[1]==arr[20][1])||(mymove[1]==arr[20][0]&&mymove[0]==arr[20][1])){
                if(occupied[4]==false){
                    mymove[2]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[21][0]&&mymove[1]==arr[21][1])||(mymove[1]==arr[21][0]&&mymove[0]==arr[21][1])){
                if(occupied[3]==false){
                    mymove[2]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[22][0]&&mymove[1]==arr[22][1])||(mymove[1]==arr[22][0]&&mymove[0]==arr[22][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[23][0]&&mymove[1]==arr[23][1])||(mymove[1]==arr[23][0]&&mymove[0]==arr[23][1])){
                if(occupied[2]==false){
                    mymove[2]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[24][0]&&mymove[1]==arr[24][1])||(mymove[1]==arr[24][0]&&mymove[0]==arr[24][1])){
                if(occupied[8]==false){
                    mymove[2]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[25][0]&&mymove[1]==arr[25][1])||(mymove[1]==arr[25][0]&&mymove[0]==arr[25][1])){
                if(occupied[7]==false){
                    mymove[2]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[26][0]&&mymove[1]==arr[26][1])||(mymove[1]==arr[26][0]&&mymove[0]==arr[26][1])){
                if(occupied[6]==false){
                    mymove[2]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            break;
            
        }
            
        }
        if(moved==false){
            int i;
            while(true){
                i=new Random().nextInt(9);
                if(occupied[i]==false){
                    mymove[2]=i;
                    occupied[i]=true;
                    gameButton[i].setIcon(cross);
                    moved=true;
                    break;
                    
                }
                
            }
        }
        
    }
       
    public void fourth_move(){
        int [][]arr={{0,1},{0,2},{0,3},{0,4},{0,6},{0,8},{1,2},{1,4},{1,7},{2,4},{2,5},{2,8},{2,6},{3,4},{3,5},{3,6},{4,5},{4,6},{4,7},{4,8},{5,3},{5,4},{5,2},{5,8},{6,7},{6,8},{7,8}};
        boolean moved=false;
        System.out.println("fourth move");
        while(true){
            if((playermove[0]==arr[0][0]&&playermove[2]==arr[0][1]) || (playermove[2]==arr[0][0]&&playermove[0]==arr[0][1]) || (playermove[2]==arr[0][0]&&playermove[1]==arr[0][1]) || (playermove[1]==arr[0][0]&&playermove[2]==arr[0][1])){
                if(occupied[2]==false){
                    mymove[3]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[1][0]&&playermove[2]==arr[1][1]) || (playermove[2]==arr[1][0]&&playermove[0]==arr[1][1]) || (playermove[2]==arr[1][0]&&playermove[1]==arr[1][1]) || (playermove[1]==arr[1][0]&&playermove[2]==arr[1][1])){
                if(occupied[1]==false){
                    mymove[3]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[2][0]&&playermove[2]==arr[2][1]) || (playermove[2]==arr[2][0]&&playermove[0]==arr[2][1]) || (playermove[2]==arr[2][0]&&playermove[1]==arr[2][1]) || (playermove[1]==arr[2][0]&&playermove[2]==arr[2][1])){
                if(occupied[6]==false){
                    mymove[3]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[3][0]&&playermove[2]==arr[3][1]) || (playermove[2]==arr[3][0]&&playermove[0]==arr[3][1]) || (playermove[2]==arr[3][0]&&playermove[1]==arr[3][1]) || (playermove[1]==arr[3][0]&&playermove[2]==arr[3][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[4][0]&&playermove[2]==arr[4][1]) || (playermove[2]==arr[4][0]&&playermove[0]==arr[4][1]) || (playermove[2]==arr[4][0]&&playermove[1]==arr[4][1]) || (playermove[1]==arr[4][0]&&playermove[2]==arr[4][1])){
                if(occupied[3]==false){
                    mymove[3]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[5][0]&&playermove[2]==arr[5][1]) || (playermove[2]==arr[5][0]&&playermove[0]==arr[5][1]) || (playermove[2]==arr[5][0]&&playermove[1]==arr[5][1]) || (playermove[1]==arr[5][0]&&playermove[2]==arr[5][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[6][0]&&playermove[2]==arr[6][1]) || (playermove[2]==arr[6][0]&&playermove[0]==arr[6][1]) || (playermove[2]==arr[6][0]&&playermove[1]==arr[6][1]) || (playermove[1]==arr[6][0]&&playermove[2]==arr[6][1])){
                if(occupied[0]==false){
                    mymove[3]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[7][0]&&playermove[2]==arr[7][1]) || (playermove[2]==arr[7][0]&&playermove[0]==arr[7][1]) || (playermove[2]==arr[7][0]&&playermove[1]==arr[7][1]) || (playermove[1]==arr[7][0]&&playermove[2]==arr[7][1])){
                if(occupied[7]==false){
                    mymove[3]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[8][0]&&playermove[2]==arr[8][1]) || (playermove[2]==arr[8][0]&&playermove[0]==arr[8][1]) || (playermove[2]==arr[8][0]&&playermove[1]==arr[8][1]) || (playermove[1]==arr[8][0]&&playermove[2]==arr[8][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[9][0]&&playermove[2]==arr[9][1]) || (playermove[2]==arr[9][0]&&playermove[0]==arr[9][1]) || (playermove[2]==arr[9][0]&&playermove[1]==arr[9][1]) || (playermove[1]==arr[9][0]&&playermove[2]==arr[9][1])){
                if(occupied[6]==false){
                    mymove[3]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[10][0]&&playermove[2]==arr[10][1]) || (playermove[2]==arr[10][0]&&playermove[0]==arr[10][1]) || (playermove[2]==arr[10][0]&&playermove[1]==arr[10][1]) || (playermove[1]==arr[10][0]&&playermove[2]==arr[10][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[11][0]&&playermove[2]==arr[11][1]) || (playermove[2]==arr[11][0]&&playermove[0]==arr[11][1]) || (playermove[2]==arr[11][0]&&playermove[1]==arr[11][1]) || (playermove[1]==arr[11][0]&&playermove[2]==arr[11][1])){
                if(occupied[5]==false){
                    mymove[3]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[12][0]&&playermove[2]==arr[12][1]) || (playermove[2]==arr[12][0]&&playermove[0]==arr[12][1]) || (playermove[2]==arr[12][0]&&playermove[1]==arr[12][1]) || (playermove[1]==arr[12][0]&&playermove[2]==arr[12][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[13][0]&&playermove[2]==arr[13][1]) || (playermove[2]==arr[13][0]&&playermove[0]==arr[13][1]) || (playermove[2]==arr[13][0]&&playermove[1]==arr[13][1]) || (playermove[1]==arr[13][0]&&playermove[2]==arr[13][1])){
                if(occupied[5]==false){
                    mymove[3]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[14][0]&&playermove[2]==arr[14][1]) || (playermove[2]==arr[14][0]&&playermove[0]==arr[14][1]) || (playermove[2]==arr[14][0]&&playermove[1]==arr[14][1]) || (playermove[1]==arr[14][0]&&playermove[2]==arr[14][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[15][0]&&playermove[2]==arr[15][1]) || (playermove[2]==arr[15][0]&&playermove[0]==arr[15][1]) || (playermove[2]==arr[15][0]&&playermove[1]==arr[15][1]) || (playermove[1]==arr[15][0]&&playermove[2]==arr[15][1])){
                if(occupied[0]==false){
                    mymove[3]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[16][0]&&playermove[2]==arr[16][1]) || (playermove[2]==arr[16][0]&&playermove[0]==arr[16][1]) || (playermove[2]==arr[16][0]&&playermove[1]==arr[16][1]) || (playermove[1]==arr[16][0]&&playermove[2]==arr[16][1])){
                if(occupied[3]==false){
                    mymove[3]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[17][0]&&playermove[2]==arr[17][1]) || (playermove[2]==arr[17][0]&&playermove[0]==arr[17][1]) || (playermove[2]==arr[17][0]&&playermove[1]==arr[17][1]) || (playermove[1]==arr[17][0]&&playermove[2]==arr[17][1])){
                if(occupied[2]==false){
                    mymove[3]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[18][0]&&playermove[2]==arr[18][1]) || (playermove[2]==arr[18][0]&&playermove[0]==arr[18][1]) || (playermove[2]==arr[18][0]&&playermove[1]==arr[18][1]) || (playermove[1]==arr[18][0]&&playermove[2]==arr[18][1])){
                if(occupied[1]==false){
                    mymove[3]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[19][0]&&playermove[2]==arr[19][1]) || (playermove[2]==arr[19][0]&&playermove[0]==arr[19][1]) || (playermove[2]==arr[19][0]&&playermove[1]==arr[19][1]) || (playermove[1]==arr[19][0]&&playermove[2]==arr[19][1])){
                if(occupied[0]==false){
                    mymove[3]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[20][0]&&playermove[2]==arr[20][1]) || (playermove[2]==arr[20][0]&&playermove[0]==arr[20][1]) || (playermove[2]==arr[20][0]&&playermove[1]==arr[20][1]) || (playermove[1]==arr[20][0]&&playermove[2]==arr[20][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[21][0]&&playermove[2]==arr[21][1]) || (playermove[2]==arr[21][0]&&playermove[0]==arr[21][1]) || (playermove[2]==arr[21][0]&&playermove[1]==arr[21][1]) || (playermove[1]==arr[21][0]&&playermove[2]==arr[21][1])){
                if(occupied[3]==false){
                    mymove[3]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[22][0]&&playermove[2]==arr[22][1]) || (playermove[2]==arr[22][0]&&playermove[0]==arr[22][1]) || (playermove[2]==arr[22][0]&&playermove[1]==arr[22][1]) || (playermove[1]==arr[22][0]&&playermove[2]==arr[22][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[23][0]&&playermove[2]==arr[23][1]) || (playermove[2]==arr[23][0]&&playermove[0]==arr[23][1]) || (playermove[2]==arr[23][0]&&playermove[1]==arr[23][1]) || (playermove[1]==arr[23][0]&&playermove[2]==arr[23][1])){
                if(occupied[2]==false){
                    mymove[3]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[24][0]&&playermove[2]==arr[24][1]) || (playermove[2]==arr[24][0]&&playermove[0]==arr[24][1]) || (playermove[2]==arr[24][0]&&playermove[1]==arr[24][1]) || (playermove[1]==arr[24][0]&&playermove[2]==arr[24][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[25][0]&&playermove[2]==arr[25][1]) || (playermove[2]==arr[25][0]&&playermove[0]==arr[25][1]) || (playermove[2]==arr[25][0]&&playermove[1]==arr[25][1]) || (playermove[1]==arr[25][0]&&playermove[2]==arr[25][1])){
                if(occupied[7]==false){
                    mymove[3]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((playermove[0]==arr[26][0]&&playermove[2]==arr[26][1]) || (playermove[2]==arr[26][0]&&playermove[0]==arr[26][1]) || (playermove[2]==arr[26][0]&&playermove[1]==arr[26][1]) || (playermove[1]==arr[26][0]&&playermove[2]==arr[26][1])){
                if(occupied[6]==false){
                    mymove[3]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            break;
            
        }  //end of the while loop which is used to assign the next move which move to block the winning of the player        
        
        if(moved==false){
            while(true){
            if((mymove[0]==arr[0][0]&&mymove[2]==arr[0][1]) || (mymove[2]==arr[0][0]&&mymove[0]==arr[0][1]) || (mymove[2]==arr[0][0]&&mymove[1]==arr[0][1]) || (mymove[1]==arr[0][0]&&mymove[2]==arr[0][1])){
                if(occupied[2]==false){
                    mymove[3]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[1][0]&&mymove[2]==arr[1][1]) || (mymove[2]==arr[1][0]&&mymove[0]==arr[1][1]) || (mymove[2]==arr[1][0]&&mymove[1]==arr[1][1]) || (mymove[1]==arr[1][0]&&mymove[2]==arr[1][1])){
                if(occupied[1]==false){
                    mymove[3]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[2][0]&&mymove[2]==arr[2][1]) || (mymove[2]==arr[2][0]&&mymove[0]==arr[2][1]) || (mymove[2]==arr[2][0]&&mymove[1]==arr[2][1]) || (mymove[1]==arr[2][0]&&mymove[2]==arr[2][1])){
                if(occupied[6]==false){
                    mymove[3]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[3][0]&&mymove[2]==arr[3][1]) || (mymove[2]==arr[3][0]&&mymove[0]==arr[3][1]) || (mymove[2]==arr[3][0]&&mymove[1]==arr[3][1]) || (mymove[1]==arr[3][0]&&mymove[2]==arr[3][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[4][0]&&mymove[2]==arr[4][1]) || (mymove[2]==arr[4][0]&&mymove[0]==arr[4][1]) || (mymove[2]==arr[4][0]&&mymove[1]==arr[4][1]) || (mymove[1]==arr[4][0]&&mymove[2]==arr[4][1])){
                if(occupied[3]==false){
                    mymove[3]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[5][0]&&mymove[2]==arr[5][1]) || (mymove[2]==arr[5][0]&&mymove[0]==arr[5][1]) || (mymove[2]==arr[5][0]&&mymove[1]==arr[5][1]) || (mymove[1]==arr[5][0]&&mymove[2]==arr[5][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[6][0]&&mymove[2]==arr[6][1]) || (mymove[2]==arr[6][0]&&mymove[0]==arr[6][1]) || (mymove[2]==arr[6][0]&&mymove[1]==arr[6][1]) || (mymove[1]==arr[6][0]&&mymove[2]==arr[6][1])){
                if(occupied[0]==false){
                    mymove[3]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[7][0]&&mymove[2]==arr[7][1]) || (mymove[2]==arr[7][0]&&mymove[0]==arr[7][1]) || (mymove[2]==arr[7][0]&&mymove[1]==arr[7][1]) || (mymove[1]==arr[7][0]&&mymove[2]==arr[7][1])){
                if(occupied[7]==false){
                    mymove[3]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[8][0]&&mymove[2]==arr[8][1]) || (mymove[2]==arr[8][0]&&mymove[0]==arr[8][1]) || (mymove[2]==arr[8][0]&&mymove[1]==arr[8][1]) || (mymove[1]==arr[8][0]&&mymove[2]==arr[8][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[9][0]&&mymove[2]==arr[9][1]) || (mymove[2]==arr[9][0]&&mymove[0]==arr[9][1]) || (mymove[2]==arr[9][0]&&mymove[1]==arr[9][1]) || (mymove[1]==arr[9][0]&&mymove[2]==arr[9][1])){
                if(occupied[6]==false){
                    mymove[3]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[10][0]&&mymove[2]==arr[10][1]) || (mymove[2]==arr[10][0]&&mymove[0]==arr[10][1]) || (mymove[2]==arr[10][0]&&mymove[1]==arr[10][1]) || (mymove[1]==arr[10][0]&&mymove[2]==arr[10][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[11][0]&&mymove[2]==arr[11][1]) || (mymove[2]==arr[11][0]&&mymove[0]==arr[11][1]) || (mymove[2]==arr[11][0]&&mymove[1]==arr[11][1]) || (mymove[1]==arr[11][0]&&mymove[2]==arr[11][1])){
                if(occupied[5]==false){
                    mymove[3]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[12][0]&&mymove[2]==arr[12][1]) || (mymove[2]==arr[12][0]&&mymove[0]==arr[12][1]) || (mymove[2]==arr[12][0]&&mymove[1]==arr[12][1]) || (mymove[1]==arr[12][0]&&mymove[2]==arr[12][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[13][0]&&mymove[2]==arr[13][1]) || (mymove[2]==arr[13][0]&&mymove[0]==arr[13][1]) || (mymove[2]==arr[13][0]&&mymove[1]==arr[13][1]) || (mymove[1]==arr[13][0]&&mymove[2]==arr[13][1])){
                if(occupied[5]==false){
                    mymove[3]=5;
                    occupied[5]=true;
                    gameButton[5].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[14][0]&&mymove[2]==arr[14][1]) || (mymove[2]==arr[14][0]&&mymove[0]==arr[14][1]) || (mymove[2]==arr[14][0]&&mymove[1]==arr[14][1]) || (mymove[1]==arr[14][0]&&mymove[2]==arr[14][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[15][0]&&mymove[2]==arr[15][1]) || (mymove[2]==arr[15][0]&&mymove[0]==arr[15][1]) || (mymove[2]==arr[15][0]&&mymove[1]==arr[15][1]) || (mymove[1]==arr[15][0]&&mymove[2]==arr[15][1])){
                if(occupied[0]==false){
                    mymove[3]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[16][0]&&mymove[2]==arr[16][1]) || (mymove[2]==arr[16][0]&&mymove[0]==arr[16][1]) || (mymove[2]==arr[16][0]&&mymove[1]==arr[16][1]) || (mymove[1]==arr[16][0]&&mymove[2]==arr[16][1])){
                if(occupied[3]==false){
                    mymove[3]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[17][0]&&mymove[2]==arr[17][1]) || (mymove[2]==arr[17][0]&&mymove[0]==arr[17][1]) || (mymove[2]==arr[17][0]&&mymove[1]==arr[17][1]) || (mymove[1]==arr[17][0]&&mymove[2]==arr[17][1])){
                if(occupied[2]==false){
                    mymove[3]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[18][0]&&mymove[2]==arr[18][1]) || (mymove[2]==arr[18][0]&&mymove[0]==arr[18][1]) || (mymove[2]==arr[18][0]&&mymove[1]==arr[18][1]) || (mymove[1]==arr[18][0]&&mymove[2]==arr[18][1])){
                if(occupied[1]==false){
                    mymove[3]=1;
                    occupied[1]=true;
                    gameButton[1].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[19][0]&&mymove[2]==arr[19][1]) || (mymove[2]==arr[19][0]&&mymove[0]==arr[19][1]) || (mymove[2]==arr[19][0]&&mymove[1]==arr[19][1]) || (mymove[1]==arr[19][0]&&mymove[2]==arr[19][1])){
                if(occupied[0]==false){
                    mymove[3]=0;
                    occupied[0]=true;
                    gameButton[0].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[20][0]&&mymove[2]==arr[20][1]) || (mymove[2]==arr[20][0]&&mymove[0]==arr[20][1]) || (mymove[2]==arr[20][0]&&mymove[1]==arr[20][1]) || (mymove[1]==arr[20][0]&&mymove[2]==arr[20][1])){
                if(occupied[4]==false){
                    mymove[3]=4;
                    occupied[4]=true;
                    gameButton[4].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[21][0]&&mymove[2]==arr[21][1]) || (mymove[2]==arr[21][0]&&mymove[0]==arr[21][1]) || (mymove[2]==arr[21][0]&&mymove[1]==arr[21][1]) || (mymove[1]==arr[21][0]&&mymove[2]==arr[21][1])){
                if(occupied[3]==false){
                    mymove[3]=3;
                    occupied[3]=true;
                    gameButton[3].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[22][0]&&mymove[2]==arr[22][1]) || (mymove[2]==arr[22][0]&&mymove[0]==arr[22][1]) || (mymove[2]==arr[22][0]&&mymove[1]==arr[22][1]) || (mymove[1]==arr[22][0]&&mymove[2]==arr[22][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[23][0]&&mymove[2]==arr[23][1]) || (mymove[2]==arr[23][0]&&mymove[0]==arr[23][1]) || (mymove[2]==arr[23][0]&&mymove[1]==arr[23][1]) || (mymove[1]==arr[23][0]&&mymove[2]==arr[23][1])){
                if(occupied[2]==false){
                    mymove[3]=2;
                    occupied[2]=true;
                    gameButton[2].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[24][0]&&mymove[2]==arr[24][1]) || (mymove[2]==arr[24][0]&&mymove[0]==arr[24][1]) || (mymove[2]==arr[24][0]&&mymove[1]==arr[24][1]) || (mymove[1]==arr[24][0]&&mymove[2]==arr[24][1])){
                if(occupied[8]==false){
                    mymove[3]=8;
                    occupied[8]=true;
                    gameButton[8].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[25][0]&&mymove[2]==arr[25][1]) || (mymove[2]==arr[25][0]&&mymove[0]==arr[25][1]) || (mymove[2]==arr[25][0]&&mymove[1]==arr[25][1]) || (mymove[1]==arr[25][0]&&mymove[2]==arr[25][1])){
                if(occupied[7]==false){
                    mymove[3]=7;
                    occupied[7]=true;
                    gameButton[7].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            if((mymove[0]==arr[26][0]&&mymove[2]==arr[26][1]) || (mymove[2]==arr[26][0]&&mymove[0]==arr[26][1]) || (mymove[2]==arr[26][0]&&mymove[1]==arr[26][1]) || (mymove[1]==arr[26][0]&&mymove[2]==arr[26][1])){
                if(occupied[6]==false){
                    mymove[3]=6;
                    occupied[6]=true;
                    gameButton[6].setIcon(cross);
                    moved=true;
                    break;
                }
            }
            break;
            
        }
        }
            
        if(moved==false){
            int i;
            while(true){
                i=new Random().nextInt(9);
                if(occupied[i]==false){
                    mymove[3]=i;
                    occupied[i]=true;
                    gameButton[i].setIcon(cross);
                    moved=true;
                    break;
                    
                }
                
            }
        }
        
        
    }
    
    public void fifth_move(){
        System.out.println("fifth move");
        for(int i=0;i<9;i++){
            if(occupied[i]==false){
                gameButton[i].setIcon(cross);
                break;
            }
        }
    }
    Front front=new Front();
     public void select(){
            System.out.println(""+count);
        Icon icon = gameButton1.getIcon();
            if((gameButton1.getIcon()==ovel && gameButton2.getIcon()==ovel && gameButton3.getIcon()==ovel)||(gameButton4.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton6.getIcon()==ovel)||(gameButton7.getIcon()==ovel && gameButton8.getIcon()==ovel && gameButton9.getIcon()==ovel)){
                System.out.println(player1Name+" won the game");
                JOptionPane.showMessageDialog(SinglePlayerGame.this, player1Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330, 470);
                this.setVisible(false);
            }else if ((gameButton1.getIcon()==ovel && gameButton4.getIcon()==ovel && gameButton7.getIcon()==ovel)||(gameButton2.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton8.getIcon()==ovel)||(gameButton3.getIcon()==ovel && gameButton6.getIcon()==ovel && gameButton9.getIcon()==ovel)){
                System.out.println(player1Name+" won the game");
                JOptionPane.showMessageDialog(SinglePlayerGame.this, player1Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330,470);
                this.setVisible(false);
            }else if((gameButton1.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton9.getIcon()==ovel)||(gameButton3.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton7.getIcon()==ovel)){
                System.out.println(player1Name+" won the game");
                JOptionPane.showMessageDialog(SinglePlayerGame.this, player1Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330,470);
                this.setVisible(false);
            }else if((gameButton1.getIcon()==cross && gameButton5.getIcon()==cross && gameButton9.getIcon()==cross)||(gameButton3.getIcon()==cross && gameButton5.getIcon()==cross && gameButton7.getIcon()==cross)){
                System.out.println(player2Name+" won the game");
                JOptionPane.showMessageDialog(SinglePlayerGame.this, player2Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330,470);
                this.setVisible(false);
            }else if ((gameButton1.getIcon()==cross && gameButton4.getIcon()==cross && gameButton7.getIcon()==cross)||(gameButton2.getIcon()==cross && gameButton5.getIcon()==cross && gameButton8.getIcon()==cross)||(gameButton3.getIcon()==cross && gameButton6.getIcon()==cross && gameButton9.getIcon()==cross)){
                System.out.println(player2Name+" won the game");
                JOptionPane.showMessageDialog(SinglePlayerGame.this, player2Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330,470);
                this.setVisible(false);
            }else if((gameButton1.getIcon()==cross && gameButton2.getIcon()==cross && gameButton3.getIcon()==cross)||(gameButton4.getIcon()==cross && gameButton5.getIcon()==cross && gameButton6.getIcon()==cross)||(gameButton7.getIcon()==cross && gameButton8.getIcon()==cross && gameButton9.getIcon()==cross)){
                System.out.println(player2Name+" won the game");
                JOptionPane.showMessageDialog(SinglePlayerGame.this, player2Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330,470);
                this.setVisible(false);
            }else if(count==9) {
                JOptionPane.showMessageDialog(SinglePlayerGame.this, "Game Tied","",JOptionPane.INFORMATION_MESSAGE,box);
                
                front.setVisible(rootPaneCheckingEnabled);
                front.setTitle("Tic Tac Toe");
                front.setSize(330,470);
                this.setVisible(false);
            }
        }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton beginButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton gameButton1;
    private javax.swing.JButton gameButton2;
    private javax.swing.JButton gameButton3;
    private javax.swing.JButton gameButton4;
    private javax.swing.JButton gameButton5;
    private javax.swing.JButton gameButton6;
    private javax.swing.JButton gameButton7;
    private javax.swing.JButton gameButton8;
    private javax.swing.JButton gameButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
