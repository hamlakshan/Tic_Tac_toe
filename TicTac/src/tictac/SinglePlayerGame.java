/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tictac;

import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class SinglePlayerGame extends javax.swing.JFrame {

    /**
     * Creates new form SinglePlayerGame
     */
    
    
    public boolean []occupied= new boolean[9];
    public JButton []gameButton=new JButton[9];
    public int[] mymove=new int[5];
    public int[] playermove= new int[5];
    int count=0;
    int comscore,playerscore;
    ImageIcon cross;
    ImageIcon ovel;
    ImageIcon box;
    Players player;
    String player1Name;
    String Computer;
    ImageIcon icon1;
    int a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,temp=0;
    int winner=0,play_first=0;
    
    public SinglePlayerGame(String player1Name, String computer){
        initComponents();
        innitialize();
        for(int i=0;i<9;i++){
            occupied[i]=false;
        }
        setLocation(500, 200);
        cross=new ImageIcon("Cross.png");
        ovel=new ImageIcon("oo.png");
        box=new ImageIcon("t.png");
        player=new Players();
       this.player1Name=player1Name;
       this.Computer=computer;
       comscore=0;
       playerscore=0;
    } 

    private SinglePlayerGame() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    public void innitialize(){
        for(int i=0;i<9;i++){
            occupied[i]=false;
        }
        playerScoreText.setText(String.valueOf(playerscore));
        computerScoreText.setText(String.valueOf(comscore));
        count=0;
        gameButton[0]=gameButton1;
        gameButton[1]=gameButton2;
        gameButton[2]=gameButton3;
        gameButton[3]=gameButton4;
        gameButton[4]=gameButton5;
        gameButton[5]=gameButton6;
        gameButton[6]=gameButton7;
        gameButton[7]=gameButton8;
        gameButton[8]=gameButton9;
        gameButton1.setIcon(null);
        gameButton2.setIcon(null);
        gameButton3.setIcon(null);
        gameButton4.setIcon(null);
        gameButton5.setIcon(null);
        gameButton6.setIcon(null);
        gameButton7.setIcon(null);
        gameButton8.setIcon(null);
        gameButton9.setIcon(null);
        
        a=0;
        b=0;
        c=0;
        d=0;
        e=0;
        f=0;
        g=0;
        h=0;
        i=0;
        temp=0;
        winner=0;
        play_first=0;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        gameButton1 = new javax.swing.JButton();
        gameButton2 = new javax.swing.JButton();
        gameButton3 = new javax.swing.JButton();
        gameButton4 = new javax.swing.JButton();
        gameButton5 = new javax.swing.JButton();
        gameButton6 = new javax.swing.JButton();
        gameButton7 = new javax.swing.JButton();
        gameButton8 = new javax.swing.JButton();
        gameButton9 = new javax.swing.JButton();
        beginButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        computerScoreText = new javax.swing.JLabel();
        playerScoreText = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(153, 51, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Papyrus", 1, 36)); // NOI18N
        jLabel1.setText("Tic Tac Toe");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(140, 50, 260, 41);

        gameButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton1);
        gameButton1.setBounds(40, 110, 70, 70);

        gameButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton2);
        gameButton2.setBounds(120, 110, 70, 70);

        gameButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton3);
        gameButton3.setBounds(200, 110, 70, 70);

        gameButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton4);
        gameButton4.setBounds(40, 190, 70, 70);

        gameButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton5);
        gameButton5.setBounds(120, 190, 70, 70);

        gameButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton6);
        gameButton6.setBounds(200, 190, 70, 70);

        gameButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton7);
        gameButton7.setBounds(40, 270, 70, 70);

        gameButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton8);
        gameButton8.setBounds(120, 270, 70, 70);

        gameButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(gameButton9);
        gameButton9.setBounds(200, 270, 70, 70);

        beginButton.setBackground(new java.awt.Color(0, 0, 0));
        beginButton.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        beginButton.setForeground(new java.awt.Color(65, 177, 230));
        beginButton.setText("begin");
        beginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginButtonActionPerformed(evt);
            }
        });
        jPanel1.add(beginButton);
        beginButton.setBounds(40, 350, 100, 40);

        resetButton.setBackground(new java.awt.Color(0, 0, 0));
        resetButton.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        resetButton.setForeground(new java.awt.Color(65, 177, 230));
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel1.add(resetButton);
        resetButton.setBounds(160, 350, 120, 40);

        exitButton.setBackground(new java.awt.Color(0, 0, 0));
        exitButton.setFont(new java.awt.Font("Papyrus", 1, 24)); // NOI18N
        exitButton.setForeground(new java.awt.Color(65, 177, 230));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton);
        exitButton.setBounds(400, 350, 100, 40);

        jLabel2.setFont(new java.awt.Font("Papyrus", 1, 18)); // NOI18N
        jLabel2.setText("Computer Score");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(280, 250, 160, 40);

        computerScoreText.setFont(new java.awt.Font("Papyrus", 1, 18)); // NOI18N
        computerScoreText.setText("        ");
        jPanel1.add(computerScoreText);
        computerScoreText.setBounds(440, 250, 50, 40);

        playerScoreText.setFont(new java.awt.Font("Papyrus", 1, 18)); // NOI18N
        playerScoreText.setText("     ");
        jPanel1.add(playerScoreText);
        playerScoreText.setBounds(440, 190, 50, 40);

        score.setFont(new java.awt.Font("Papyrus", 1, 18)); // NOI18N
        score.setText("PlayerScore");
        jPanel1.add(score);
        score.setBounds(280, 190, 130, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tictac/tumblr_static_elsa.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 30, 510, 460);

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Plantagenet Cherokee", 1, 24)); // NOI18N
        backButton.setForeground(new java.awt.Color(65, 177, 230));
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        backButton.setPreferredSize(new java.awt.Dimension(97, 41));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton);
        backButton.setBounds(530, 350, 100, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        innitialize();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void gameButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton1ActionPerformed
        // TODO add your handling code here:
        gameButton1.setIcon(ovel);
        count++;
        a=1;
        occupied[0]=true;
        System.out.println("button 1 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton1ActionPerformed

    private void beginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginButtonActionPerformed
        // TODO add your handling code here:
          if(count==0)
              play_first=1;
          else
              play_first=0;
          com_move();
    }//GEN-LAST:event_beginButtonActionPerformed

    private void gameButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton2ActionPerformed
        // TODO add your handling code here:
         gameButton2.setIcon(ovel);
        count++;
        b=1;
        occupied[1]=true;
        System.out.println("button 2 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton2ActionPerformed

    private void gameButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton3ActionPerformed
        // TODO add your handling code here:
        gameButton3.setIcon(ovel);
        count++;
        c=1;
        occupied[2]=true;
        System.out.println("button 3 pressed");
        com_move();
        select();
        
    }//GEN-LAST:event_gameButton3ActionPerformed

    private void gameButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton4ActionPerformed
        // TODO add your handling code here:
        gameButton4.setIcon(ovel);
        count++;
        d=1;
        occupied[3]=true;
        System.out.println("button 4 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton4ActionPerformed

    private void gameButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton5ActionPerformed
        // TODO add your handling code here:
        gameButton5.setIcon(ovel);
        count++;
        e=1;
        occupied[4]=true;
        System.out.println("button 5 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton5ActionPerformed

    private void gameButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton6ActionPerformed
gameButton6.setIcon(ovel);
        count++;
        f=1;
        occupied[5]=true;
        System.out.println("button 6 pressed");
        com_move();
        select();
        // TODO add your handling code here:
    }//GEN-LAST:event_gameButton6ActionPerformed

    private void gameButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton7ActionPerformed
        // TODO add your handling code here:
        gameButton7.setIcon(ovel);
        count++;
        g=1;
        occupied[6]=true;
        System.out.println("button 7 pressed");
        com_move();
        select();
        
    }//GEN-LAST:event_gameButton7ActionPerformed

    private void gameButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton8ActionPerformed
        // TODO add your handling code here:
        gameButton8.setIcon(ovel);
        count++;
        h=1;
        occupied[7]=true;
        System.out.println("button 8 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton8ActionPerformed

    private void gameButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameButton9ActionPerformed
        // TODO add your handling code here:
        gameButton9.setIcon(ovel);
        count++;
        i=1;
        occupied[8]=true;
        System.out.println("button 9 pressed");
        com_move();
        select();
    }//GEN-LAST:event_gameButton9ActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        new SinglePlayerDA().write(player1Name, playerscore, comscore);
        System.exit(0);
        
    }//GEN-LAST:event_exitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new SinglePlayerDA().write(player1Name, playerscore, comscore);
        PlayerName player=new PlayerName();
        player.setVisible(rootPaneCheckingEnabled);
        player.setSize(330, 430);
        player.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinglePlayerGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinglePlayerGame().setVisible(true);
            }
        });
    }
    
    
    public void start_game(){
        temp=0;
        win_move();
        block_move();
        make_move();
        extra_move();
        //select();
    }
    public void com_move(){
        System.out.println(" play first "+ play_first+" count "+count);
        //if condition check weather game is started by player or computer 
        if(play_first==1){
            if(count==0)
                first_move();
            if(count==1)
                second_move();
            if((count==2)||(count==3)||(count==4)||(count==5))
                start_game();
            
        }            
        if(play_first==0){
            if(count==1)
                first_move();
            if((count==2)||(count==3)||(count==4)||(count==5))
                start_game();
        }                
    }
    public void win_move(){
        System.out.println("the win move.......");
        if ((a==2)&&(b==2)&&(c== 0)&&(temp==0)) 
		temp=3;
	if ((a==2)&&(b== 0)&&(c==2)&&(temp==0)) 
		temp=2;
	if ((a== 0)&&(b==2)&&(c==2)&&(temp==0)) 
		temp=1;
	if ((a==2)&&(d==2)&&(g== 0)&&(temp==0)) 
		temp=7;
	if ((a==2)&&(d== 0)&&(g==2)&&(temp==0)) 
		temp=4;
	if ((a== 0)&&(d==2)&&(g==2)&&(temp==0)) 
		temp=1;
	if ((a==2)&&(e==2)&&(i== 0)&&(temp==0)) 
		temp=9;
	if ((a==2)&&(e== 0)&&(i==2)&&(temp==0)) 
		temp=5;
	if ((a== 0)&&(e==2)&&(i==2)&&(temp==0)) 
		temp=1;
	if ((b==2)&&(e==2)&&(h== 0)&&(temp==0)) 
		temp=8;
	if ((b==2)&&(e== 0)&&(h==2)&&(temp==0)) 
		temp=5;
	if ((b== 0)&&(e==2)&&(h==2)&&(temp==0)) 
		temp=2;
	if ((d==2)&&(e==2)&&(f== 0)&&(temp==0)) 
		temp=6;
	if ((d==2)&&(e== 0)&&(f==2)&&(temp==0)) 
		temp=5;
	if ((d== 0)&&(e==2)&&(f==2)&&(temp==0)) 
		temp=4;
	if ((g==2)&&(h==2)&&(i== 0)&&(temp==0)) 
		temp=9;
	if ((g==2)&&(h== 0)&&(i==2)&&(temp==0)) 
		temp=8;
	if ((g== 0)&&(h==2)&&(i==2)&&(temp==0)) 
		temp=7;
	if ((c==2)&&(f==2)&&(i== 0)&&(temp==0)) 
		temp=9;
	if ((c==2)&&(f== 0)&&(i==2)&&(temp==0)) 
		temp=6;
	if ((c== 0)&&(f==2)&&(i==2)&&(temp==0)) 
		temp=3;
	if ((g==2)&&(e==2)&&(c== 0)&&(temp==0)) 
		temp=3;
	if ((g==2)&&(e== 0)&&(c==2)&&(temp==0)) 
		temp=5;
	if ((g== 0)&&(e==2)&&(c==2)&&(temp==0)) 
		temp=7;
        System.out.println("win move temp  "+temp);
    }
    public void block_move() {
        System.out.println("block move.......");
	if ((a==1)&&(b==1)&&(c==0)&&(temp==0)) 
            temp=3;
	if ((a==1)&&(b==0)&&(c==1)&&(temp==0)) 
            temp=2;
	if ((a==0)&&(b==1)&&(c==1)&&(temp==0)) 
            temp=1;
	if ((a==1)&&(d==1)&&(g==0)&&(temp==0)) 
            temp=7;
	if ((a==1)&&(d==0)&&(g==1)&&(temp==0)) 
            temp=4;
	if ((a==0)&&(d==1)&&(g==1)&&(temp==0)) 
            temp=1;
	if ((a==1)&&(e==1)&&(i==0)&&(temp==0)) 
            temp=9;
	if ((a==1)&&(e==0)&&(i==1)&&(temp==0)) 
            temp=5;
	if ((a==0)&&(e==1)&&(i==1)&&(temp==0)) 
            temp=1;
	if ((b==1)&&(e==1)&&(h==0)&&(temp==0)) 
            temp=8;
	if ((b==1)&&(e==0)&&(h==1)&&(temp==0)) 
            temp=5;
	if ((b==0)&&(e==1)&&(h==1)&&(temp==0)) 
            temp=2;
	if ((d==1)&&(e==1)&&(f==0)&&(temp==0)) 
            temp=6;
	if ((d==1)&&(e==0)&&(f==1)&&(temp==0)) 
            temp=5;
	if ((d==0)&&(e==1)&&(f==1)&&(temp==0)) 
            temp=4;
	if ((g==1)&&(h==1)&&(i==0)&&(temp==0)) 
            temp=9;
	if ((g==1)&&(h==0)&&(i==1)&&(temp==0)) 
            temp=8;
	if ((g==0)&&(h==1)&&(i==1)&&(temp==0)) 
            temp=7;
	if ((c==1)&&(f==1)&&(i==0)&&(temp==0)) 
            temp=9;
	if ((c==1)&&(f==0)&&(i==1)&&(temp==0)) 
            temp=6;
	if ((c==0)&&(f==1)&&(i==1)&&(temp==0)) 
            temp=3;
	if ((g==1)&&(e==1)&&(c==0)&&(temp==0)) 
            temp=3;
	if ((g==1)&&(e==0)&&(c==1)&&(temp==0)) 
            temp=5;
	if ((g==0)&&(e==1)&&(c==1)&&(temp==0)) 
            temp=7;
        System.out.println("block move temp :"+temp);
    }
    
    public void extra_move(){ 
        int i=0;
        if(temp==0){
            for(i=0;i<9;i++){
                if(occupied[i]==false){
                    temp=i+1;
                    break;
                }
            }
        }
}
    public void make_move() {
        System.out.println("make move ");
	if ((temp==1)&&(a==0)) {
            gameButton1.setIcon(cross);
            a=2;
            occupied[0]=true;
            temp=0;
                
	}
	if ((temp==2)&&(b==0)) {
            gameButton2.setIcon(cross);
            b=2;
            occupied[1]=true;
            temp=0;	
        }
	if ((temp==3)&&(c==0)) {
            gameButton3.setIcon(cross);
            c=2;
            occupied[2]=true;
            temp=0;
	}
	if ((temp==4)&&(d==0)) {
            gameButton4.setIcon(cross);
            d=2;
            occupied[3]=true;
            temp=0;
	}
	if ((temp==5)&&(e==0)) {
            gameButton5.setIcon(cross);
            e=2;
            occupied[4]=true;
            temp=0;
	}
	if ((temp==6)&&(f==0)) {
            gameButton6.setIcon(cross);
            f=2;
            occupied[5]=true;
            temp=0;
	}
	if ((temp==7)&&(g==0)) {
            gameButton7.setIcon(cross);
            g=2;
            occupied[6]=true;
            temp=0;
	}
	if ((temp==8)&&(h==0)) {
            gameButton8.setIcon(cross);
            h=2;
            occupied[7]=true;
            temp=0;
	}
	if ((temp==9)&&(i==0)) {
            gameButton9.setIcon(cross);
            i=2;
            occupied[8]=true;
            temp=0;
	}
        System.out.println("make move temp "+temp);
        select();
}

    
    public void first_move(){
        while(true){
            mymove[0]=new Random().nextInt(9);
            if(occupied[mymove[0]]==false){
                gameButton[mymove[0]].setIcon(cross);
                occupied[mymove[0]]=true;
                break;
            }                        
        }
        System.out.println("first move  "+ mymove[0]);
        
    }
    
    
    public void second_move(){
        System.out.println("second move .....");
        int i;
        int k = mymove[0];
        System.out.println("k is "+k);
        if(k==0){
            int []arr={1,2,3,4,6,8};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==1){
            int []arr={0,2,4,7};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==2){
            int []arr={0,1,4,5,8,6};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==3){
            int []arr={0,4,5,6};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==4){
            int []arr={0,1,2,3,5,6,7,8};
            while(true){
                i=new Random().nextInt(8);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==5){
            int []arr={3,4,2,8};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==6){
            int []arr={0,2,3,4,7,8};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==7){
            int []arr={1,4,6,8};
            while(true){
                i=new Random().nextInt(4);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }
        if(k==8){
            int []arr={6,7,5,2,0,4};
            while(true){
                i=new Random().nextInt(6);
                if(occupied[i]==false){
                    mymove[1]=arr[i];
                    gameButton[arr[i]].setIcon(cross);
                    occupied[arr[i]]=true;
                    break;
                }
            }
        }   
    }
    
    
    Front front=new Front();
    
    public void select(){
        System.out.println(""+count);
        Icon icon = gameButton1.getIcon();
        if((gameButton1.getIcon()==ovel && gameButton2.getIcon()==ovel && gameButton3.getIcon()==ovel)||(gameButton4.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton6.getIcon()==ovel)||(gameButton7.getIcon()==ovel && gameButton8.getIcon()==ovel && gameButton9.getIcon()==ovel)){
            System.out.println(player1Name+" won the game");
            playerscore++;
            JOptionPane.showMessageDialog(SinglePlayerGame.this, player1Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
            //front.setVisible(rootPaneCheckingEnabled);
           // front.setTitle("Tic Tac Toe");
           // front.setSize(330, 470);
           // this.setVisible(false);
        }else if ((gameButton1.getIcon()==ovel && gameButton4.getIcon()==ovel && gameButton7.getIcon()==ovel)||(gameButton2.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton8.getIcon()==ovel)||(gameButton3.getIcon()==ovel && gameButton6.getIcon()==ovel && gameButton9.getIcon()==ovel)){
            System.out.println(player1Name+" won the game");
            playerscore++;
            JOptionPane.showMessageDialog(SinglePlayerGame.this, player1Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
            //front.setVisible(rootPaneCheckingEnabled);
            //front.setTitle("Tic Tac Toe");
            //front.setSize(330,470);
          //  this.setVisible(false);
        }else if((gameButton1.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton9.getIcon()==ovel)||(gameButton3.getIcon()==ovel && gameButton5.getIcon()==ovel && gameButton7.getIcon()==ovel)){
            System.out.println(player1Name+" won the game");
            playerscore++;
            JOptionPane.showMessageDialog(SinglePlayerGame.this, player1Name+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
            //front.setVisible(rootPaneCheckingEnabled);
            //front.setTitle("Tic Tac Toe");
            //front.setSize(330,470);
           // this.setVisible(false);
        }else if((gameButton1.getIcon()==cross && gameButton5.getIcon()==cross && gameButton9.getIcon()==cross)||(gameButton3.getIcon()==cross && gameButton5.getIcon()==cross && gameButton7.getIcon()==cross)){
            System.out.println(Computer+" won the game");
            comscore++;
            JOptionPane.showMessageDialog(SinglePlayerGame.this, Computer+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
           // front.setVisible(rootPaneCheckingEnabled);
           // front.setTitle("Tic Tac Toe");
          //  front.setSize(330,470);
           // this.setVisible(false);
        }else if ((gameButton1.getIcon()==cross && gameButton4.getIcon()==cross && gameButton7.getIcon()==cross)||(gameButton2.getIcon()==cross && gameButton5.getIcon()==cross && gameButton8.getIcon()==cross)||(gameButton3.getIcon()==cross && gameButton6.getIcon()==cross && gameButton9.getIcon()==cross)){
            System.out.println(Computer+" won the game");
            comscore++;
            JOptionPane.showMessageDialog(SinglePlayerGame.this, Computer+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
           // front.setVisible(rootPaneCheckingEnabled);
           // front.setTitle("Tic Tac Toe");
           // front.setSize(330,470);
           // this.setVisible(false);
        }else if((gameButton1.getIcon()==cross && gameButton2.getIcon()==cross && gameButton3.getIcon()==cross)||(gameButton4.getIcon()==cross && gameButton5.getIcon()==cross && gameButton6.getIcon()==cross)||(gameButton7.getIcon()==cross && gameButton8.getIcon()==cross && gameButton9.getIcon()==cross)){
            System.out.println(Computer+" won the game");
            comscore++;
            JOptionPane.showMessageDialog(SinglePlayerGame.this, Computer+" won the game","",JOptionPane.INFORMATION_MESSAGE,box);
            //front.setVisible(rootPaneCheckingEnabled);
           // front.setTitle("Tic Tac Toe");
           // front.setSize(330,470);
           // this.setVisible(false);
        }else if(count==5) {
            JOptionPane.showMessageDialog(SinglePlayerGame.this, "Game Tied","",JOptionPane.INFORMATION_MESSAGE,box);

            //front.setVisible(rootPaneCheckingEnabled);
            //front.setTitle("Tic Tac Toe");
            //front.setSize(330,470);
           // this.setVisible(false);
        }
        else if(count==4){
            if(a!=0 && b!=0 && c!=0 && d!=0 && e!=0 && f!=0 && g!=0 && h!=0 && i!=0)
                JOptionPane.showMessageDialog(SinglePlayerGame.this, "Game Tied","",JOptionPane.INFORMATION_MESSAGE,box); 
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton beginButton;
    private javax.swing.JLabel computerScoreText;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton gameButton1;
    private javax.swing.JButton gameButton2;
    private javax.swing.JButton gameButton3;
    private javax.swing.JButton gameButton4;
    private javax.swing.JButton gameButton5;
    private javax.swing.JButton gameButton6;
    private javax.swing.JButton gameButton7;
    private javax.swing.JButton gameButton8;
    private javax.swing.JButton gameButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel playerScoreText;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel score;
    // End of variables declaration//GEN-END:variables
}
